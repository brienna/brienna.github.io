<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>briennakh</title>
    <description></description>
    <link>http://localhost:4000</link>
    
      
        <item>
          <title>Microphone workaround for MacBook using iPhone</title>
          <description>&lt;p&gt;Accidentally ripped your microphone off your MacBook motherboard, like I just did? Or your microphone just not working? Don’t worry. There’s a workaround. You just need your iPhone, as well as taking these four steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;On your iPhone, download Microphone Free by Von Bruno from the App Store.&lt;/li&gt;
  &lt;li&gt;Open the app and connect your iPhone to your MacBook via the Lightning cable.&lt;/li&gt;
  &lt;li&gt;On your MacBook, open Audio MIDI Setup. You should see your iPhone listed among the devices on the left side of the window. Select it and press the Enable button.
 &lt;img src=&quot;/assets/09-08-18/audio_devices.png&quot; alt=&quot;Audio MIDI Setup&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Still on your MacBook, go to System Preferences &amp;gt; Sound, then the Input tab. You should see your iPhone listed as a device to select for sound input. Select it. 
 &lt;img src=&quot;/assets/09-08-18/system_pref.png&quot; alt=&quot;System Preferences&quot; /&gt;
You can now use the Microphone Free app on your phone as a microphone for your MacBook. Note that you’ll have to repeat these steps every time you reconnect your phone.&lt;/li&gt;
&lt;/ol&gt;
</description>
          <pubDate>2018-09-08T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/microphone-workaround</link>
          <guid isPermaLink="true">http://localhost:4000/notes/microphone-workaround</guid>
        </item>
      
    
      
        <item>
          <title>Notes from Scientific American, June 2018</title>
          <description>&lt;p&gt;&lt;em&gt;I take notes on only the articles I find interesting, and my notes are only on what I find interesting in these articles.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Articles:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Into the Wildfire. &lt;em&gt;Jason G. Goldman&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Quirky Graphene. &lt;em&gt;Prachi Patel&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;into-the-wildfire-jason-g-goldman&quot;&gt;Into the Wildfire. &lt;em&gt;Jason G. Goldman&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;WUI = wildland-urban interface, the area where houses sit within or directly adjacent to natural vegetation.&lt;/p&gt;

&lt;p&gt;The WUI in the U.S. increased by 33 percent between 1990 and 2010, to about 190 million acres. The number of houses within the WUI grew by 41 percent in the same period.&lt;/p&gt;

&lt;p&gt;Having more structures in the WUI increases not only the damage wildfires inflict (because they are harder to fight) but also the risk that they will break out in the first place.&lt;/p&gt;

&lt;p&gt;In a lot of places in the U.S., it’s not a question of &lt;em&gt;if&lt;/em&gt;; it’s a question of &lt;em&gt;when&lt;/em&gt; will that home be exposed to wildfire. Climate change will also bring weather conditions conducive to large fires more frequently in the future.&lt;/p&gt;

&lt;h3 id=&quot;quirky-graphene-prachi-patel&quot;&gt;Quirky Graphene. &lt;em&gt;Prachi Patel&lt;/em&gt;&lt;/h3&gt;

</description>
          <pubDate>2018-08-24T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/sciam-notes-june-2018</link>
          <guid isPermaLink="true">http://localhost:4000/notes/sciam-notes-june-2018</guid>
        </item>
      
    
      
        <item>
          <title>Notes from Scientific American, July 2018</title>
          <description>&lt;p&gt;&lt;em&gt;I take notes on only the articles I find interesting, and my notes are only on what I find interesting in these articles.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Articles:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Smart Walls. &lt;em&gt;Prachi Patel&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Killer Infection: Is It Your Genes? &lt;em&gt;Claudia Wallis&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Crossing the Quantum Divide. &lt;em&gt;Tim Folger&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;The Science of Anti-Science Thinking. &lt;em&gt;Douglas T. Kenrick, Adam B. Cohen, Steven L. Neuberg, and Robert B. Cialdini&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;The Real Paleo Diet. &lt;em&gt;Peter S. Ungar&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;The Clocks within Our Cells. &lt;em&gt;Veronique Greenwood&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Building a Weather-Smart Grid. &lt;em&gt;Peter Fairley&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;smart-walls-prachi-patel&quot;&gt;Smart Walls. &lt;em&gt;Prachi Patel&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Special paint turns a surface into a giant sensor.&lt;/p&gt;

&lt;p&gt;Two functions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sense human touch and track getures from a short distance (&amp;lt; 3 feet).&lt;/li&gt;
  &lt;li&gt;Detect the locations of appliances and whether they are switched on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This technology could someday turn on lights when a person enters a room, track a player’s motion in an interactive video game or monitor a child’s television use.&lt;/p&gt;

&lt;p&gt;Procedure:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Cover the wall with a lattice of painter’s tape and paint over it with nickel paint.&lt;/li&gt;
  &lt;li&gt;Remove the tape, leaving behind a diamond pattern of electrodes.&lt;/li&gt;
  &lt;li&gt;Connect the diamonds using thin copper tape, with a circular vinyl sticker in the middle of each electrode as an insulator.&lt;/li&gt;
  &lt;li&gt;Wire the copper tape to a circuit board plugged into the wall and cover the wall with regular latex paint.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;a href=&quot;http://chrisharrison.net/projects/wallplusplus/wallplusplus.pdf&quot;&gt;paper&lt;/a&gt; was presented at the CHI Conference on Human Factors in Computing Systems in Montreal last April.&lt;/p&gt;

&lt;h3 id=&quot;killer-infection-is-it-your-genes-claudia-wallis&quot;&gt;Killer Infection: Is It Your Genes? &lt;em&gt;Claudia Wallis&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Subtle mutations can undermine our ability to fend off a specific bug.&lt;/p&gt;

&lt;p&gt;This is an important idea, but I’m just surprised that the author is treating it as one that is novel: “Crazy as that sounds, there is a growing body of research that supports the idea.”&lt;/p&gt;

&lt;h3 id=&quot;crossing-the-quantum-divide-tim-folger&quot;&gt;Crossing the Quantum Divide. &lt;em&gt;Tim Folger&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Brief quantum mechanics review:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Particles do not exist in definite states—here or there, having this energy or that—but rather take on all possible states and positions.&lt;/li&gt;
  &lt;li&gt;Each particle is described with an equation called a wave function, which is a combination, or “superposition,” of multiple waves. The amplitude of each peak in a wave function denotes the probability of a particle being found in any specific circumstance—for instance, at point A or B, as shown in Figure 1.&lt;/li&gt;
  &lt;li&gt;When researchers make a measurement of a particle, this act appears to reduce all the quantum possibilities to one, seemingly chosen at random. The measurement will find the particle at point A, for example, and the particle enters the classical realm, ceasing to be in a superposition.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quantum mechanics produces some bizarre effects in the microscopic world, but we do not see these phenomena in our macroscopic, “classical” reality. Why is that? Scientists have never understood why and how the universe crosses over between these realms, and no one has yet found experimental evidence to support any of the dozen or so theories that offer possible explanations to unify the two realms.&lt;/p&gt;

&lt;p&gt;Three such theories:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Collapse at Measurement.&lt;/strong&gt; Particles can linger in quantum superpositions as long as no one looks too closely, but once humans make a measurement, the particle is forced to “choose” a specific state.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Decoherence.&lt;/strong&gt; As long as a particle is undisturbed by any outside influence, it can remain in superposition, but when the wave functions of other particles or objects nearby meet with its own, they interfere, causing the particle’s many quantum possibilities to collapse into a single classical reality.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Continuous Spontaneous Localization.&lt;/strong&gt; The collapse of the wave function to a single possibility is a random event, not caused by human or environmental interference. The chances of any one particle collapsing at any given time are extremely small, but in macroscopic objects containing multitudes of atoms, the collapse of at least one is inevitable, which then causes the entire structure to collapse.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In recent years, physicists have started running exquisitely sensitive tabletop experiments that may one day reveal how objects make the startling transition from quantum to quotidian. Simon Gröblacher, for example, hopes to address an extraordinary question: Can a single macroscopic object be in two places at once? Could something the size of a pinhead, say, exist both here and there at the same time? Such experiments would reveal whether nature somehow censors quantum effects above a certain size scale.&lt;/p&gt;

&lt;p&gt;Miscellaneous notes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The gravitational wave detected by LIGO in February 2016 was a ripple in spacetime caused by two distant colliding black holes. The wave stretched and squeezed the space between two mirrors at the experiment’s twin sites in Washington State and Louisiana, shifting the positions of the mirrors by just four-thousandths the diameter of a proton.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-science-of-anti-science-thinking-douglas-t-kenrick-adam-b-cohen-steven-l-neuberg-and-robert-b-cialdini&quot;&gt;The Science of Anti-Science Thinking. &lt;em&gt;Douglas T. Kenrick, Adam B. Cohen, Steven L. Neuberg, and Robert B. Cialdini&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Scientific thinking often encounters ambivalent responses. Simply presenting a litany of facts is not enough. In fact, this approach can backfire because of humans’ propensity to forgo rational decision making. Some key obstacles stand in the way of clear scientific thought:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Shortcuts.&lt;/strong&gt; Human brains are endowed with a facile means for dealing with information overload. When we are overwhelmed or are too short on time, we rely on simple heuristics, such as accepting the group consensus or trusting an expert.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Confirmation Bias.&lt;/strong&gt; Even with ample time and sufficient interest to move beyond shortcuts, we sometimes process information in a manner less like an impartial judge and more like a lawyer working for the mob. We show a natural tendency to pay attention to some findings over others and to reinterpret mixed evidence to fit with preexisting beliefs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Social Goals.&lt;/strong&gt; Even if we surmount the first two obstacles, powerful forms of social motivation can interfere with an objective analysis of the facts at hand. Whether one is biased toward reaching one scientific conclusion versus another can be influenced by the desire to win status, to conform to the views of a social network or even to attract a mate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if the human mind has many obstacles to objective thinking, we shouldn’t accept that ignorance and bias will always triumph. Social psychology suggests ways of coping:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Shortcuts.&lt;/strong&gt; When communicating complicated evidence, sufficient time is needed to switch from a heuristic to a systematic mode of thinking that allows for better overall evaluation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Confirmation Bias.&lt;/strong&gt; Change one’s perspective, not by telling the person to remain objective, but by telling the person to consider what their opinion would have been if the evidence had contradicted their own views.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Social Goals.&lt;/strong&gt; Explore whether agreement within the group really exists. Someone who disagrees with an erroneous opinion can sometimes open other group members’ minds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a large literature on persuasion and social influence that could be quite useful to anyone attempting to communicate with a group holding beliefs that fly in the face of scientific evidence.&lt;/p&gt;

&lt;p&gt;Scientists need to adopt a more systematic approach in collecting their own data on the effectiveness of different strategies for confronting antiscientific thinking about particular issues. If scientists can incorporate the insights of research on psychological obstacles to objective thinking, more people will accept objective evidence of how the natural world functions.&lt;/p&gt;

&lt;h3 id=&quot;the-real-paleo-diet-peter-s-ungar&quot;&gt;The Real Paleo Diet. &lt;em&gt;Peter S. Ungar&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;What do you feed a 400-pound gorilla? Anything it wants.&lt;/p&gt;

&lt;p&gt;Paleontologists have traditionally assumed that the sizes and shapes of an animal’s teeth dictate its diet. But food availability, competition, and personal preference are even bigger factors in what an animal chooses to eat. Often there is a mismatch between diet and morphology wherein organisms with specialized phenotypes may act primarily as generalist feeders in nature, a phenomenon termed Liem’s paradox.&lt;/p&gt;

&lt;p&gt;For example, gorillas’ teeth are designed for stems, leaves, and the pith of nonwoody plants, but gorillas have been observed to walk half a mile or more, right past edible leaves and stems, to get to a fruiting tree.&lt;/p&gt;

&lt;p&gt;Tooth form can tell us something about what an animal in the past was capable of eating even if only once or twice in a generation, and the most challenging foods its ancestors had to contend with. But for insights into food choices among options that were available on the biospheric buffet, we need “foodprints,” which are chemical signatures and microscopic wear patterns in fossil teeth that result from eating food.&lt;/p&gt;

&lt;p&gt;Based on studies of foodprints on hominin teeth, researchers know that early hominin diets varied over time and space and we most likely evolved to be flexible eaters, driven by ever changing climates, habitats, and food availability. In other words, while it is good to eliminate processed food from our diet, there is no specific Paleolithic diet to follow.&lt;/p&gt;

&lt;h3 id=&quot;the-clocks-within-our-cells-veronique-greenwood&quot;&gt;The Clocks within Our Cells. &lt;em&gt;Veronique Greenwood&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Will we someday go into the doctor’s office knowing the details of our own clock the way we know our blood type? Will we receive a customized time card for when to take our meds?&lt;/p&gt;

&lt;p&gt;It is estimated that up to 82 percent of mammalian genes are expressed in a cyclical pattern of highs and lows. This means there is a time aspect to biology. The implications for medicine are wide-ranging. Fifty-six of the 100 most commonly used drugs, including acetaminophen, target rhythmically expressed proteins, meaning the time of dosing matters.&lt;/p&gt;

&lt;h3 id=&quot;building-a-weather-smart-grid-peter-fairley&quot;&gt;Building a Weather-Smart Grid. &lt;em&gt;Peter Fairley&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Renewable energy (e.g. wind and solar power) will not become the major energy sources until a nationwide transmission grid (ideally direct-current rather than alternating-current) is designed based on local, daily weather variations.&lt;/p&gt;

</description>
          <pubDate>2018-08-19T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/sciam-notes-july-2018</link>
          <guid isPermaLink="true">http://localhost:4000/notes/sciam-notes-july-2018</guid>
        </item>
      
    
      
        <item>
          <title>How to bulk access arXiv full-texts</title>
          <description>&lt;p&gt;Since its inception in 1991, arXiv, the main database for scientific preprints, has received almost &lt;a href=&quot;https://arxiv.org/help/stats/2017_by_area/index&quot;&gt;1.3 million submissions&lt;/a&gt;. All of this data can be useful in analysis, so we may want to be able to access the full-texts in bulk. This post goes over how we can do this using Python 3 and the command line.&lt;/p&gt;

&lt;h2 id=&quot;steps-for-bulk-accessing-full-texts-using-the-command-line&quot;&gt;Steps for bulk accessing full-texts using the command line&lt;/h2&gt;

&lt;p&gt;Although the data is sitting right there on the server, it is [not recommended to crawl arXiv directly]](https://arxiv.org/help/robots) due to limited server capacity. However, arXiv has acknowledged the demand for bulk access by &lt;a href=&quot;https://arxiv.org/help/bulk_data_s3&quot;&gt;making all full-texts available on Amazon S3&lt;/a&gt;, with monthly updates.&lt;/p&gt;

&lt;p&gt;arXiv stores their source files in the &lt;code class=&quot;highlighter-rouge&quot;&gt;arxiv&lt;/code&gt; bucket. The requester has to pay. The data is in big tar files ordered by date (the last modification time of that file). This is kind of inconvenient, because we will need to process the entire arXiv corpus even if we are only interested in a specific category.&lt;/p&gt;

&lt;p&gt;Below we will go over the steps to download the full-texts, targeting the &lt;code class=&quot;highlighter-rouge&quot;&gt;astro-ph&lt;/code&gt; category.&lt;/p&gt;

&lt;h3 id=&quot;1-set-up-an-aws-account&quot;&gt;1. Set up an AWS account.&lt;/h3&gt;

&lt;p&gt;To be able to download anything from Amazon S3, you need an Amazon Web Services (AWS) account. Sign up &lt;a href=&quot;https://portal.aws.amazon.com/billing/signup&quot;&gt;here&lt;/a&gt;. You’ll have to register a credit card.&lt;/p&gt;

&lt;h3 id=&quot;2-create-your-configuration-file&quot;&gt;2. Create your configuration file.&lt;/h3&gt;

&lt;p&gt;Create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;config.ini&lt;/code&gt; and add your AWS configs:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ACCESS_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SECRET_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To get your key values, follow the directions &lt;a href=&quot;https://www.cloudberrylab.com/blog/how-to-find-your-aws-access-key-id-and-secret-access-key-and-register-with-cloudberry-s3-explorer/&quot;&gt;here&lt;/a&gt; for root access keys.&lt;/p&gt;

&lt;p&gt;Do not make this file public.&lt;/p&gt;

&lt;h3 id=&quot;3-create-s3-resource--set-configs&quot;&gt;3. Create S3 resource &amp;amp; set configs.&lt;/h3&gt;

&lt;p&gt;Create a Python file that you’ll run from the command line. In it, initialize a S3 resource, which is an object-oriented interface to the service, and configure it to use your root access.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configparser&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Creates S3 resource &amp;amp; sets configs to enable download.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Connecting to Amazon S3...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Securely import configs from private config file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configparser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SafeConfigParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'config.ini'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create S3 resource &amp;amp; set configs&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# the AWS resource we want to use&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;aws_access_key_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEFAULT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ACCESS_KEY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;aws_secret_access_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEFAULT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'us-east-1'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# same region arxiv bucket is in&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Runs if script is called on command line&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create S3 resource &amp;amp; set configs&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-check-arxiv-bucket-metadata&quot;&gt;4. Check &lt;code class=&quot;highlighter-rouge&quot;&gt;arxiv&lt;/code&gt; bucket metadata.&lt;/h3&gt;

&lt;p&gt;arXiv maintains useful information about the data in their bucket in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;src/arXiv_src_manifest.xml&lt;/code&gt;. Download this file to better understand what we’re working with.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configparser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Downloads given filename from source bucket to destination directory.

    Parameters
    ----------
    key : str
        Name of file to download
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Ensure src directory exists &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Download file&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Downloading s3://arxiv/{} to {}...'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'arxiv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# name of file to download from&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# path to file to download to&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ExtraArgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RequestPayer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'requester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exceptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Code'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ERROR: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; does not exist in arxiv bucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Runs if script is called on command line&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Download manifest file to current directory&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src/arXiv_src_manifest.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note: The code will only show new or changed sections relevant to the current step, but the Python file contains code from all steps up to this one. The full file will be shown at the end.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Explore the bucket metadata in the manifest file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;explore_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Explores arxiv bucket metadata.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;arxiv bucket metadata:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src/arXiv_src_manifest.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Print last time the manifest was edited&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arXivSRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'timestamp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manifest was last edited on '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Print number of files in bucket&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numOfFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'arxiv bucket contains '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numOfFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' tars'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Print total size&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total size: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' GB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Runs if script is called on command line&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Explore bucket metadata &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;explore_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we run this code, we’ll see when the manifest file was last updated, along with how many tar files the &lt;code class=&quot;highlighter-rouge&quot;&gt;arxiv&lt;/code&gt; bucket holds and the total size. When I ran this code (on June 10, 2018), the bucket contained 1,910 tars that were 924 GB in size.&lt;/p&gt;

&lt;h3 id=&quot;5-download-astro-ph-source-files&quot;&gt;5. Download &lt;code class=&quot;highlighter-rouge&quot;&gt;astro-ph&lt;/code&gt; source files!&lt;/h3&gt;

&lt;p&gt;Remember that each tar contains nested tar gzs, which in turn contain the source files from a specific category. While we must download each tar, we can extract these source files without the overhead of unzipping all of the tars and tar gzs. We will also screen the source files to only extract those labelled with the &lt;code class=&quot;highlighter-rouge&quot;&gt;astro-ph&lt;/code&gt; category.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;begin_download&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Sets up download of tars from arxiv bucket.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Beginning tar download &amp;amp; extraction...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create a reusable Paginator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;paginator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_paginator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'list_objects_v2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create a PageIterator from the Paginator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_iterator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paginator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paginate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'arxiv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;RequestPayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'requester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src/'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Download and extract tars&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Contents'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Contents'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# If current file is a tar&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.tar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Processed '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' tars'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# -1 &lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Runs if script is called on command line&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Begin tar download &amp;amp; extraction &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;begin_download&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;full-code&quot;&gt;Full code&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configparser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Creates S3 resource &amp;amp; sets configs to enable download.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Connecting to Amazon S3...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Securely import configs from private config file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configparser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SafeConfigParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'config.ini'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create S3 resource &amp;amp; set configs&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# the AWS resource we want to use&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;aws_access_key_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEFAULT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ACCESS_KEY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;aws_secret_access_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEFAULT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'us-east-1'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# same region arxiv bucket is in&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Downloads given filename from source bucket to destination directory.

    Parameters
    ----------
    key : str
        Name of file to download
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Ensure src directory exists &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Download file&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Downloading s3://arxiv/{} to {}...'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'arxiv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# name of file to download from&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# path to file to download to&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ExtraArgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RequestPayer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'requester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exceptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Code'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ERROR: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; does not exist in arxiv bucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;explore_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Explores arxiv bucket metadata.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;arxiv bucket metadata:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src/arXiv_src_manifest.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Print last time the manifest was edited&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arXivSRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'timestamp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manifest was last edited on '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Print number of files in bucket&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numOfFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'arxiv bucket contains '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numOfFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' tars'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Print total size&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total size: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' GB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;begin_download&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Sets up download of tars from arxiv bucket.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Beginning tar download &amp;amp; extraction...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create a reusable Paginator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;paginator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_paginator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'list_objects_v2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create a PageIterator from the Paginator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_iterator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paginator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paginate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'arxiv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;RequestPayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'requester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src/'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Download and extract tars&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Contents'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Contents'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# If current file is a tar&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.tar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Processed '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' tars'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# -1 &lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Runs if script is called on command line&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create S3 resource &amp;amp; set configs&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Download manifest file to current directory&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'src/arXiv_src_manifest.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Explore bucket metadata &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;explore_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Begin tar download &amp;amp; extraction &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;begin_download&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
          <pubDate>2018-06-08T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/bulk-arxiv-download</link>
          <guid isPermaLink="true">http://localhost:4000/notes/bulk-arxiv-download</guid>
        </item>
      
    
      
        <item>
          <title>Machine Learning Specialization: Course 1, Week 2</title>
          <description>&lt;blockquote&gt;
  &lt;p&gt;This week you will build your first intelligent application that makes predictions from data. We will explore this idea within the context of our first case study, predicting house prices, where you will create models that predict a continuous value (price) from input features (square footage, number of bedrooms and bathrooms,…). This is just one of the many places where regression can be applied. Other applications range from predicting health outcomes in medicine, stock prices in finance, and power usage in high-performance computing, to analyzing which regulators are important for gene expression. You will also examine how to analyze the performance of your predictive model and implement regression in practice using an iPython notebook.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;overview-of-linear-regression&quot;&gt;Overview of linear regression:&lt;/h2&gt;

&lt;p&gt;Linear regression is a popular statistical tool with the following uses:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Prediction
    &lt;ul&gt;
      &lt;li&gt;We have a set of features and we want to model how our observations that are associated with these features change as we change the values of the features. For example, a house has some set of features like the size of the house, number of bedrooms, number of bathrooms, and so on. The observation that we have is the value of the house.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Classification
    &lt;ul&gt;
      &lt;li&gt;If we have an email and we want to classify it as spam or not, we can think of that email as having features related to its text that are indicative of whether that email is spam or not.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Analyze importance of features&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;linear-regression-modeling&quot;&gt;Linear regression modeling&lt;/h2&gt;

&lt;p&gt;Problem: We want to sell our house, but we don’t know how much to list it for.&lt;/p&gt;

&lt;h3 id=&quot;simple-approaches-not-using-linear-regression&quot;&gt;Simple approaches (not using linear regression)&lt;/h3&gt;

&lt;p&gt;To try to estimate the value of our house, we might look at other recent sales in the neighborhood and what those houses look like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image1.png&quot; alt=&quot;Recent house sales&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;An x-value is also called an independent variable, &lt;strong&gt;feature&lt;/strong&gt;, covariate, or predictor. A y-value is also called a dependent variable, &lt;strong&gt;observation&lt;/strong&gt;, or response.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;How do we use these observations to estimate our house value?&lt;/p&gt;

&lt;p&gt;We might look at how big our house is, and then look for other sales of houses of that size.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image2.png&quot; alt=&quot;Predict our house by similar houses&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, most likely that no house sold recently had exactly the same square footage as our house. So we can’t use this approach.&lt;/p&gt;

&lt;p&gt;A slightly more flexible approach is to look at a range of square footage around our actual square footage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image3.png&quot; alt=&quot;Predict our house by similar houses&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But even with this approach, we only have two house sales that we’re going to base our estimage off of. And we’re throwing out all these other observations as if they had nothing to do with the value of our house. That isn’t reasonable. There is still information in these other observations. We should leverage all the information that we can to come up with good predictions.&lt;/p&gt;

&lt;h3 id=&quot;linear-regression-approach&quot;&gt;Linear regression approach&lt;/h3&gt;

&lt;p&gt;Let’s try linear regression to model the relationship between the square footage of the house and the house sales price. The simplest linear regression model is to just fit a line through the data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image4.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This line is defined by f&lt;sub&gt;w&lt;/sub&gt;(x) = w&lt;sub&gt;0&lt;/sub&gt; + w&lt;sub&gt;1&lt;/sub&gt;x with an intercept w&lt;sub&gt;0&lt;/sub&gt; and a slope w&lt;sub&gt;1&lt;/sub&gt;.&lt;/p&gt;

&lt;p&gt;The w in f&lt;sub&gt;w&lt;/sub&gt;(x) indicates that this function is specified by parameters. For this function, our parameters are the intercept and the slope, which means the function is parameterized by the set of w&lt;sub&gt;0&lt;/sub&gt; and w&lt;sub&gt;1&lt;/sub&gt;, or w = (w&lt;sub&gt;0&lt;/sub&gt; and w&lt;sub&gt;1&lt;/sub&gt;).&lt;/p&gt;

&lt;p&gt;The slope, or w&lt;sub&gt;1&lt;/sub&gt;, is also called the regression coefficient, or the weight on the feature x. As we vary x, the square footage of the house, the regression coefficient determines how much of an impact this change has on changes in the observed house sales price.&lt;/p&gt;

&lt;p&gt;We could draw slightly different lines, each given by a different set of parameters w. Which line is the right line or a good line? Which w do we want to choose for our model?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image5.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We choose by defining a cost for a given line. One very common cost associated with a specific fit to the data is something called the residual sum of squares (RSS).&lt;/p&gt;

&lt;p&gt;With RSS, we get the difference between our prediction and our actual observation. To do this, we first look at how far each observation is from the fitted line, or from what the model would predict.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image6.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then we look at the square of these distances and sum over them.&lt;/p&gt;

&lt;p&gt;RSS(w&lt;sub&gt;0&lt;/sub&gt;, w&lt;sub&gt;1&lt;/sub&gt;) =  &lt;br /&gt;
      ($&lt;sub&gt;house1&lt;/sub&gt; - [w&lt;sub&gt;0&lt;/sub&gt; + w&lt;sub&gt;1&lt;/sub&gt;sq.ft.&lt;sub&gt;house1&lt;/sub&gt;])&lt;sup&gt;2&lt;/sup&gt;  &lt;br /&gt;
    + ($&lt;sub&gt;house2&lt;/sub&gt; - [w&lt;sub&gt;0&lt;/sub&gt; + w&lt;sub&gt;1&lt;/sub&gt;sq.ft.&lt;sub&gt;house2&lt;/sub&gt;])&lt;sup&gt;2&lt;/sup&gt;  &lt;br /&gt;
    + ($&lt;sub&gt;house3&lt;/sub&gt; - [w&lt;sub&gt;0&lt;/sub&gt; + w&lt;sub&gt;1&lt;/sub&gt;sq.ft.&lt;sub&gt;house3&lt;/sub&gt;])&lt;sup&gt;2&lt;/sup&gt;  &lt;br /&gt;
    + … [include all houses]&lt;/p&gt;

&lt;p&gt;After we calculate the cost of all possible w’s, or lines, we choose the one that minimizes the RSS. The resulting w that we choose is denoted as ŵ = (ŵ&lt;sub&gt;0&lt;/sub&gt;, ŵ&lt;sub&gt;1&lt;/sub&gt;). You can say the ŵ as “w hat.”&lt;/p&gt;

&lt;p&gt;The best guess of our house price is what f&lt;sub&gt;ŵ&lt;/sub&gt;(x) = ŵ&lt;sub&gt;0&lt;/sub&gt; + ŵ&lt;sub&gt;1&lt;/sub&gt;x predicts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image7.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;adding-higher-order-effects&quot;&gt;Adding higher order effects&lt;/h3&gt;

&lt;p&gt;Perhaps a linear fit is not the best fit. Let’s try a quadratic fit. (Even though we’re talking about a quadratic fit to the data, this is actually still called linear regression, because we think of x&lt;sup&gt;2&lt;/sup&gt; just as another feature, in addition to x.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image8.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This line is defined by f&lt;sub&gt;w&lt;/sub&gt;(x) = w&lt;sub&gt;0&lt;/sub&gt; + w&lt;sub&gt;1&lt;/sub&gt;x + w&lt;sub&gt;2&lt;/sub&gt;x&lt;sup&gt;2&lt;/sup&gt;. Here we have three parameters.&lt;/p&gt;

&lt;p&gt;Now we need to figure out which is the best quadratic fit to this data. We can do this by minimizing our RSS, again.&lt;/p&gt;

&lt;p&gt;A 13th-order polynomial looks like it would be an even better fit. Our RSS here are basically zero.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image9.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But can we believe this fit? It shows that our house is worth very little. Yes, we talked about RSS as being this cost of the fit. And we have really minimized our RSS here, but this function just looks crazy. We need a way to evaluate our fit.&lt;/p&gt;

&lt;h2 id=&quot;evaluating-regression-models&quot;&gt;Evaluating regression models&lt;/h2&gt;

&lt;h3 id=&quot;evaluating-overfitting-via-trainingtest-split&quot;&gt;Evaluating overfitting via training/test split&lt;/h3&gt;

&lt;p&gt;The problem with the 13th-order polynomial is overfitting, which minimizes RSS but leads to very bad predictions. We’ve really honed in to our actual observations, but we’re not generalizing well to new observations we might get. Overfitting can be a problem with any machine learning model or statistical model.&lt;/p&gt;

&lt;p&gt;Even though it didn’t minimize our RSS as much as the 13th-order polynomial, the quadratic fit appears to be a better model.&lt;/p&gt;

&lt;p&gt;How do we choose the right model order or complexity? The goal is to get good predictions. We can’t actually observe these predictions, but we can simulate predictions.&lt;/p&gt;

&lt;p&gt;To simulate predictions, we begin by randomly splitting the data set into two sets, one for training and the other for testing. In the plot below, the training data set is represented by blue circles and the test data set by gray circles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image10.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We fit our model on only the training set, use this model to predict the data in the test set, and then compare the predictions with the actual observed values. Of course, this method only works well if we have enough data in both sets.&lt;/p&gt;

&lt;p&gt;To evaluate the fit, we still use RSS, but we calculate the RSS on only houses in the training data set. The resulting number is called the training error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image11.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Training error(w) = &lt;br /&gt;
    ($&lt;sub&gt;train1&lt;/sub&gt; - f&lt;sub&gt;w&lt;/sub&gt;(sq.ft.&lt;sub&gt;train1&lt;/sub&gt;))&lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;
    + ($&lt;sub&gt;train2&lt;/sub&gt; - f&lt;sub&gt;w&lt;/sub&gt;(sq.ft.&lt;sub&gt;train2&lt;/sub&gt;))&lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;
    + ($&lt;sub&gt;train3&lt;/sub&gt; - f&lt;sub&gt;w&lt;/sub&gt;(sq.ft.&lt;sub&gt;train3&lt;/sub&gt;))&lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;
    + … [include all houses in training data set]&lt;/p&gt;

&lt;p&gt;After we minimize the training error over all fits and find our ŵ, we use this optimized fit to evaluate our test data set with RSS. The resulting number is called the test error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image12.png&quot; alt=&quot;Linear regression model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Test error(ŵ) = &lt;br /&gt;
    ($&lt;sub&gt;test1&lt;/sub&gt; - f&lt;sub&gt;ŵ&lt;/sub&gt;(sq.ft.&lt;sub&gt;test1&lt;/sub&gt;))&lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;
    + ($&lt;sub&gt;test2&lt;/sub&gt; - f&lt;sub&gt;ŵ&lt;/sub&gt;(sq.ft.&lt;sub&gt;test2&lt;/sub&gt;))&lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;
    + ($&lt;sub&gt;test3&lt;/sub&gt; - f&lt;sub&gt;ŵ&lt;/sub&gt;(sq.ft.&lt;sub&gt;test3&lt;/sub&gt;))&lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;
    + … [include all houses in test data set]&lt;/p&gt;

&lt;h3 id=&quot;trainingtest-curves&quot;&gt;Training/test curves&lt;/h3&gt;

&lt;p&gt;How do the test error and training error vary as a function of the model complexity? The plot below shows what the curves tend to look like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/05-11-18/image13.png&quot; alt=&quot;Training/test curve&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we increase the model order, our training error decreases until it hits a plateau. We saw this when our RSS continued to minimize more and more as we increased the model complexity.&lt;/p&gt;

&lt;p&gt;Our test error also decreases until a certain point, then it begins to increase. We saw this increase happen with the 13th-order polynomial.&lt;/p&gt;

&lt;p&gt;Training and test errors are important to keep in mind when we select the model order or complexity for making our predictions.&lt;/p&gt;

</description>
          <pubDate>2018-05-11T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/machine-learning-course1-week2</link>
          <guid isPermaLink="true">http://localhost:4000/notes/machine-learning-course1-week2</guid>
        </item>
      
    
      
        <item>
          <title>Machine Learning Specialization: Course 1, Week 1</title>
          <description>&lt;h1 id=&quot;week-1-welcome&quot;&gt;Week 1, Welcome&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Machine learning is everywhere, but is often operating behind the scenes. This introduction to the specialization provides you with insights into the power of machine learning, and the multitude of intelligent applications you personally will be able to develop and deploy upon completion. We also discuss who we are, how we got here, and our view of the future of intelligent applications.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This specialization does things a little differently than other courses in machine learning. Rather than supplying you with a laundry list of algorithms and methods, this specialization focuses on helping you to figure out what task you’re trying to solve, what algorithms and methods make sense in the context of the task, and how to measure their performance. By focusing on use cases and treating algorithms as black boxes, you will be able to better grasp the key concepts that allow you to build and measure a strong intelligent application, rather than a simple application that may be disconnected from reality.&lt;/p&gt;

&lt;p&gt;In the first course in this specialization, you will build intelligent applications. In the second, third, and fourth courses, you will formulate, implement, and evaluate machine learning methods.&lt;/p&gt;

&lt;p&gt;Required math background: basic calculus (derivatives) and basic linear algebra (vectors, matrices, and matrix multiplication).&lt;/p&gt;

&lt;p&gt;This specialization uses the Jupyter Notebook (formerly IPython Notebook), which is Python plus wiki pages. To open a notebook via Terminal, navigate to the directory containing the notebook, then execute &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter notebook&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other useful Jupyter operations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Change cell type to code, while inside cell: esc + Y&lt;/li&gt;
  &lt;li&gt;Change cell type to markdown, while inside cell: esc + M&lt;/li&gt;
  &lt;li&gt;Execute a cell, while inside cell: shift + enter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Short Python refresher:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In addition to the conventional way of creating a function with the &lt;code class=&quot;highlighter-rouge&quot;&gt;def&lt;/code&gt; command, you can also create an anonymous function with &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt;. Borrowed from Lisp, the &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt; function has the following syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;lamba arg1, arg2 : expression&lt;/code&gt;. Arguments can be numerous, but there can be only one expression that is evaluated and returned.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Conventional function&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 9&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Lambda function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the conventional function &lt;code class=&quot;highlighter-rouge&quot;&gt;f()&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt; function &lt;code class=&quot;highlighter-rouge&quot;&gt;g()&lt;/code&gt; do the exact same thing, taking input &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;, squaring it, and returning the result. &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt; functions are a matter of style. It is never required to use them; you could use a conventional function anywhere you would use a &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt; function. However, &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt; functions can be useful if you want to encapsulate specific, non-reusable code without cluttering your code with many short functions.&lt;/p&gt;

&lt;h3 id=&quot;resources&quot;&gt;Resources&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/specializations/machine-learning&quot;&gt;Machine Learning Specialization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/briennakh/machine-learning&quot;&gt;My GitHub repo for the specialization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/briennakh/machine-learning/tree/master/1.%20Machine%20learning%20foundations%20-%20A%20case%20study%20approach/Week%201%2C%20Welcome&quot;&gt;My GitHub repo subdirectory for Course 1, Week 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
          <pubDate>2018-05-10T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/machine-learning-course1-week1</link>
          <guid isPermaLink="true">http://localhost:4000/notes/machine-learning-course1-week1</guid>
        </item>
      
    
      
        <item>
          <title>Addressing a unchecked cast warning</title>
          <description>&lt;p&gt;I wrote some code, so that I could, among other things, read a serialized &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&amp;lt;Vehicle&amp;gt;&lt;/code&gt; from an &lt;code class=&quot;highlighter-rouge&quot;&gt;ObjectInputStream&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;in&lt;/code&gt;, into &lt;code class=&quot;highlighter-rouge&quot;&gt;orders&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;orders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vehicle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the Java compiler gives an unchecked cast warning:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MacBook:Homework Brienna$ javac Orders.java -Xlint:unchecked
Orders.java:152: warning: [unchecked] unchecked cast
                    orders = (ArrayList&amp;lt;Vehicle&amp;gt;) in.readObject();
                                                                ^
  required: ArrayList&amp;lt;Vehicle&amp;gt;
  found:    Object
1 warning
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem is that a cast is a runtime check, but a generic type (the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Vehicle&amp;gt;&lt;/code&gt; part of &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&amp;lt;Vehicle&amp;gt;&lt;/code&gt;) gets erased during compilation and is not available at runtime for the cast. In fact, at runtime there is no difference between an &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&amp;lt;Vehicle&amp;gt;&lt;/code&gt; and an &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&amp;lt;AnythingElse&amp;gt;&lt;/code&gt;. Because of this type erasure, I can’t check that I actually have an &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&amp;lt;Vehicle&amp;gt;&lt;/code&gt; when I am casting. So I need to do the check myself by looping through the ArrayList and casting each element individually:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;orders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vehicle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: Since I have control over the objects which were originally serialized, I could avoid the loop by using an array instead of an ArrayList. Array types are always a safe cast (if they don’t have a generic type themselves).&lt;/p&gt;

&lt;p&gt;More info about type erasure can be found &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/generics/erasure.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/339699/java-generics-type-erasure-when-and-what-happens&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The full code for this assignment can be found &lt;a href=&quot;https://github.com/briennakh/ISTE200/tree/master/Day%206/Homework&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
          <pubDate>2017-12-28T00:00:00-05:00</pubDate>
          <link>http://localhost:4000/notes/how-to-address-unchecked-cast-warning</link>
          <guid isPermaLink="true">http://localhost:4000/notes/how-to-address-unchecked-cast-warning</guid>
        </item>
      
    
      
        <item>
          <title>Java I/O notes</title>
          <description>&lt;p&gt;Every time I work with I/O, I find myself looking up the same stuff, so I’ve consolidated my notes on I/O into one place here.&lt;/p&gt;

&lt;h2 id=&quot;what-is-io&quot;&gt;What is I/O?&lt;/h2&gt;

&lt;p&gt;I/O stands for Input/Output operations, which are reading/writing.&lt;/p&gt;

&lt;p&gt;To simplify I/O, Java uses streams. A stream is an object that represents an input source or output destination. Some streams simply pass data, and others process data. As explained later, you can layer different streams into one stream to achieve the desired functionality.&lt;/p&gt;

&lt;h2 id=&quot;an-overview-of-the-io-process&quot;&gt;An overview of the I/O process&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: For the sake of clarity, I use the idea of a “file” to represent an input source or output destination. The actual of the source/destination can vary in reality.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;open the file (that is the input source or output destination)&lt;/li&gt;
  &lt;li&gt;read from the file / write to the file&lt;/li&gt;
  &lt;li&gt;close the file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Open the file:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All of the streams are automatically opened when created.&lt;/p&gt;

&lt;p&gt;When created, all streams take either a File object or the file as a string.&lt;/p&gt;

&lt;p&gt;File class:
An object represents a file. This class does not do any I/O itself.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello world.txt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Most common methods I’ve been using in the File class:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exists()&lt;/code&gt; - ensure file exists before using the File object in I/O activities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read/write&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;All streams have &lt;code class=&quot;highlighter-rouge&quot;&gt;read()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;write()&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Close:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can close any stream explicitly by calling its close method.&lt;/p&gt;

&lt;h2 id=&quot;types-of-io-streams&quot;&gt;Types of I/O streams&lt;/h2&gt;

&lt;p&gt;[hierarchy]&lt;/p&gt;

&lt;p&gt;Streams are either byte-oriented or character-oriented. Character streams work with character data, and byte streams work with binary data.&lt;/p&gt;

&lt;p&gt;All byte streams are descended from the abstract base classes InputStream/OutputStream. All character streams are descended from the abstract base classes Reader/Writer. These base classes are where common methods like &lt;code class=&quot;highlighter-rouge&quot;&gt;read()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;write()&lt;/code&gt; are defined, for different data types.&lt;/p&gt;

&lt;p&gt;Each section below discuss most commonly used streams.&lt;/p&gt;

&lt;h4 id=&quot;work-directly-with-files&quot;&gt;Work directly with files&lt;/h4&gt;

&lt;p&gt;Class names that start with File specialize in file I/O. They take the File object or a string representing the file name.&lt;/p&gt;

&lt;p&gt;(I often use the File object, because I want to be able to check if the file exists before I open a stream on it. The File object opens the file. But if you don’t use the File object, then the file is opened when you create the stream.)&lt;/p&gt;

&lt;p&gt;Character:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read: &lt;code class=&quot;highlighter-rouge&quot;&gt;FileReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Write: &lt;code class=&quot;highlighter-rouge&quot;&gt;FileWriter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Byte:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read: &lt;code class=&quot;highlighter-rouge&quot;&gt;FileInputStream&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Write: &lt;code class=&quot;highlighter-rouge&quot;&gt;FileOutputStream&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using these streams alone for file I/O is possible but not preferred.&lt;/p&gt;

&lt;p&gt;To create a stream that lets you access the data in the manner you want, such as text, data stream, object, etc., it is recommended to layer two or more streams into a single stream. To layer streams, you use an object of one class as the argument for the constructor for another class. When you close the outer stream, it closes all underlying streams as well.&lt;/p&gt;

&lt;p&gt;The streams above are the ones you begin with when you connect to a file. Now let’s look at streams you can use to wrap them with.&lt;/p&gt;

&lt;h4 id=&quot;buffer-the-io-operations&quot;&gt;Buffer the I/O operations&lt;/h4&gt;

&lt;p&gt;It is preferred to next wrap the above stream with a Buffer stream.&lt;/p&gt;

&lt;p&gt;The read() and write() methods read and write single character or byte. Adding a Buffer stream changes this behavior.&lt;/p&gt;

&lt;p&gt;Analogy for why this is preferred: https://medium.com/@Mz_Chi/why-you-should-use-bufferedreader-and-bufferedwriter-727614e6f9ee&lt;/p&gt;

&lt;p&gt;flush. But when you close the file, &lt;code class=&quot;highlighter-rouge&quot;&gt;[stream obj].close()&lt;/code&gt;, this is now flushing automatically, so you don’t have to worry about explicitly flushing as of Java _.&lt;/p&gt;

&lt;p&gt;Character:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read: &lt;code class=&quot;highlighter-rouge&quot;&gt;BufferedReader&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Write: &lt;code class=&quot;highlighter-rouge&quot;&gt;BufferedWriter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Byte:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read: &lt;code class=&quot;highlighter-rouge&quot;&gt;BufferedInputStream&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Write: &lt;code class=&quot;highlighter-rouge&quot;&gt;BufferedOutputStream&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;printwriter&quot;&gt;PrintWriter&lt;/h4&gt;

&lt;h4 id=&quot;working-with-primitive-data-types&quot;&gt;Working with primitive data types&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DataInputStream&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DataOutputStream&lt;/code&gt; are the most common used streams for processing binary files. Purpose is to read/write primitive data types such as int, double, etc., without needing to parse or convert data types.&lt;/p&gt;

&lt;p&gt;Useful methods to know about:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;writeUTF()&lt;/code&gt; – writes strings&lt;/p&gt;

&lt;p&gt;You also must know the structure of the file to know what data type to read.&lt;/p&gt;

&lt;h4 id=&quot;object-streams&quot;&gt;Object streams&lt;/h4&gt;

&lt;p&gt;Like data streams support I/O of primitive data types, object streams support I/O of objects. Object streams are &lt;code class=&quot;highlighter-rouge&quot;&gt;ObjectInputStream&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ObjectOutputStream&lt;/code&gt;. They use subinterfaces of the interface that data streams use, thus sharing primitive data I/O methods with data streams.&lt;/p&gt;

&lt;p&gt;If you want your object to be serializable, it has to implement the marker interface Serializable. Since Serializable is a marker interface, it has no methods to be overriden.&lt;/p&gt;

&lt;p&gt;Serializable objects can only contain objects which are also serializable. All object references must be serialized, so the entire network of interconnected objects may be properly put back together again and used.&lt;/p&gt;

&lt;p&gt;So if it has another object that is not serializable in its properties, such as a Scanner, then you can mark it as transient or static so it won’t get serialized.&lt;/p&gt;

&lt;p&gt;Writes/Reads values of the object’s nonstatic an nontransient attributes.&lt;/p&gt;

&lt;h2 id=&quot;exceptions&quot;&gt;Exceptions&lt;/h2&gt;

&lt;p&gt;// NOTE: When you work with I/O operations, you’ll need to catch or
// throw three types of checked exceptions:
// IOException - thrown when an error occurs in I/O processing
// EOFException - thrown when code attempts to read beyond end of file
// FileNotFoundException - thrown when code attempts to open nonexistent file&lt;/p&gt;

</description>
          <pubDate>2017-11-12T00:00:00-05:00</pubDate>
          <link>http://localhost:4000/notes/File-I-O-basics</link>
          <guid isPermaLink="true">http://localhost:4000/notes/File-I-O-basics</guid>
        </item>
      
    
      
        <item>
          <title>Why you need to cast after an instanceof</title>
          <description>&lt;p&gt;See this code block:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Child&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we already checked that Person is an instance of a Child, why are we still casting it as a Child?&lt;/p&gt;

&lt;p&gt;Person could be an instance of a class higher up in the inheritance chain. We don’t necessarily know the inheritance chain. It could be something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Grandparent
    |_____ Parent
            |______ Child
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where Grandparent is the base class, parent extends grandparent. Child extends parent.&lt;/p&gt;

&lt;p&gt;When you create an object, that object is an instance of that class and all the superclasses (including java.lang.Object itself). So instanceof would say yes, Person is an instance of a class and all of its subclasses, Person could actually not be Child but be Parent or even Grandparent. We cast to ensure that Person IS a Child.&lt;/p&gt;

&lt;p&gt;Why would this be a problem? What happens if we don’t cast it?&lt;/p&gt;

&lt;p&gt;Take this:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Child&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If Person were a Child and we didn’t cast it to ensure it was a Child, then nothing happens. But if Person is NOT a Child but a Grandparent, for example, then the above is actually assigning a Grandparent object to a Child object.&lt;/p&gt;

&lt;p&gt;Without casting, this has consequences, because you are trying to fit a less precise type to a more precise type.&lt;/p&gt;

&lt;p&gt;instanceof measures if some object will fit a box. 
Casting actually puts it in the box.&lt;/p&gt;
</description>
          <pubDate>2017-10-05T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/cast-after-instanceof</link>
          <guid isPermaLink="true">http://localhost:4000/notes/cast-after-instanceof</guid>
        </item>
      
    
      
        <item>
          <title>Java uses only &quot;pass by value&quot;</title>
          <description>&lt;p&gt;There are two ways to pass objects, by reference or by value. To pass by reference means that you pass the reference. To pass by value means that you pass a copy of the reference.&lt;/p&gt;

&lt;p&gt;It is often misunderstood which way Java uses. An excerpt from “Big Java” (p. 337):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You will sometimes read in Java books that “numbers are passed by value, objects are passed by reference.” That is technically not quite correct. In Java, objects themselves are never passed as parameters; instead, both numbers and &lt;em&gt;object references&lt;/em&gt; are passed by value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had thought I understood what it means to pass by value, but understanding it as a fact is different than understanding it in practice. Today I found myself stuck on an ISTE-200 assignment because I tried to do something that isn’t possible with pass by value.&lt;/p&gt;

&lt;p&gt;I was writing a class with several setter methods that are similar. Each setter receives an index as a parameter, and if the index is a valid index in the specified array, the setter sets an instance variable to refer to the String object found at the index.&lt;/p&gt;

&lt;p&gt;For example, the setters &lt;code class=&quot;highlighter-rouge&quot;&gt;setEngine&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;setLoad&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;  
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOADS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOADS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the setters are similar, I wanted to see if I could write a generic setter:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setVariable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;  
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It didn’t work. &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; did change, but the instance variables didn’t.&lt;/p&gt;

&lt;p&gt;Why? The instance variable stores a reference to a String object, and when I pass the instance variable to &lt;code class=&quot;highlighter-rouge&quot;&gt;setVariable&lt;/code&gt;, I am giving &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; a &lt;em&gt;copy&lt;/em&gt; of that reference. At this moment, the instance variable and &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; both refer to the same object. &lt;code class=&quot;highlighter-rouge&quot;&gt;LOADS[index]&lt;/code&gt;, however, stores a reference to a different object. So when I write &lt;code class=&quot;highlighter-rouge&quot;&gt;var = LOADS[index]&lt;/code&gt;, I am replacing the reference that &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; currently stores with a new one. Now the instance variable and &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; no longer refer to the same object. This is why the instance variable doesn’t get updated. &lt;strong&gt;With pass by value, a Java method can update an object’s state, but it can’t &lt;em&gt;replace&lt;/em&gt; the contents of an object reference&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;(And in this particular situation I happen to be passing a String reference. A String is immutable, meaning that there are no methods in its public API that I can call to update its state. Possible solutions are to instead pass a StringBuilder or a wrapper class containing the String reference.)&lt;/p&gt;

&lt;p&gt;Helpful resource: https://www.journaldev.com/3884/java-is-pass-by-value-and-not-pass-by-reference&lt;/p&gt;
</description>
          <pubDate>2017-10-04T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/java-passes-by-value</link>
          <guid isPermaLink="true">http://localhost:4000/notes/java-passes-by-value</guid>
        </item>
      
    
      
        <item>
          <title>Setting up and using MySQL on MacOS</title>
          <description>&lt;p&gt;&lt;em&gt;Notes from the first week of ISTE-608: Database Design and Implementation, during which I set up and began using MySQL on my MacBook for the first time.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;downloading-and-installing-mysql&quot;&gt;Downloading and installing MySQL&lt;/h2&gt;

&lt;p&gt;Download the open source MySQL Community Server (&lt;a href=&quot;https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-macos10.12-x86_64.dmg&quot;&gt;version 5.7.19&lt;/a&gt;) as a DMG file, open it, and double-click on the package to launch the installer.&lt;/p&gt;

&lt;p&gt;During installation, a dialog will pop up to inform you of the temporary root password. Save it. If you lose it, consult the section “How to Reset the Root Password” in the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/&quot;&gt;MySQL 5.7 reference manual&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-mysql&quot;&gt;Setting up MySQL&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Set server preferences:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open System Preferences. You should notice a MySQL icon.&lt;/li&gt;
  &lt;li&gt;Click the icon to enter the MySQL pane.&lt;/li&gt;
  &lt;li&gt;Ensure that the checkbox to “Automatically Start MySQL Server on Startup” is checked.&lt;/li&gt;
  &lt;li&gt;Start the server by clicking the “Start MySQL Server” button. This should be the only time you need to start the server, because you have it set up to automatically start on startup. But if you stop the server yourself, you can start it back up this way.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Change the temporary root password:&lt;/strong&gt;&lt;/p&gt;

&lt;ol start=&quot;5&quot;&gt;
  &lt;li&gt;Open a Terminal window and start a MySQL session by executing &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/mysql/bin/mysql -u root -p&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Enter the temporary root password at the prompt. You will see a message starting with “Welcome to the MySQL monitor.”&lt;/li&gt;
  &lt;li&gt;Execute the following ALTER USER command: &lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';&lt;/code&gt;. Substitute &lt;code class=&quot;highlighter-rouge&quot;&gt;new_password&lt;/code&gt; with your new password. The single quotes need to be included.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;using-mysql&quot;&gt;Using MySQL&lt;/h2&gt;

&lt;p&gt;To use MySQL from now on, follow steps 5 and 6 above, but using the root password that you set. You can run multiple sessions at the same time, one session per Terminal window. To quit a session, type &lt;code class=&quot;highlighter-rouge&quot;&gt;quit&lt;/code&gt; and enter.&lt;/p&gt;

&lt;h3 id=&quot;useful-commands&quot;&gt;Useful commands&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--tee&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;\T&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command lets you log everything that is displayed on the screen during the session. All of this data is appended to the file you specify. You can use this command when starting a session by adding the following argument: &lt;code class=&quot;highlighter-rouge&quot;&gt;--tee [absolute_path_to_log_file]&lt;/code&gt;. Or you can use it anytime during the session: &lt;code class=&quot;highlighter-rouge&quot;&gt;\T [absolute_path_to_log_file]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\G&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a table has many attributes, it can appear as a disorganized mess when printed in Terminal. There are several &lt;a href=&quot;https://stackoverflow.com/questions/924729/mysql-select-many-fields-how-best-to-display-in-terminal&quot;&gt;solutions&lt;/a&gt; for this. I like the ego command, which tells the server to display the table vertically. Just add on the &lt;code class=&quot;highlighter-rouge&quot;&gt;\G&lt;/code&gt; flag in place of the &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt; at the end of a SQL statement, like &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table \G&lt;/code&gt;.&lt;/p&gt;

</description>
          <pubDate>2017-09-30T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/installing-and-using-mysql</link>
          <guid isPermaLink="true">http://localhost:4000/notes/installing-and-using-mysql</guid>
        </item>
      
    
      
        <item>
          <title>Present and future state of cloud computing</title>
          <description>&lt;p&gt;&lt;em&gt;I wrote this paper for an assignment in the course ISTE-605: Scholarship in Information Sciences and Technologies. The objectives in doing this assignment were to develop and apply literature search skills, and to gain initial experience in paraprashing and use of in-text citations. To fulfill these objectives, I developed a list of 15 references that for cloud computing, (a) identified and discussed open issues, challenges, and opportunities, (b) presented the state of the practice, and (c) were representative of the state of the art. Then, based on the references I selected, I wrote a short paper that presents my prediction for the evolution of cloud computing over the next five years.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;present-and-future-state-of-cloud-computing&quot;&gt;Present and future state of cloud computing&lt;/h2&gt;

&lt;p&gt;Cloud computing is an integration of existing technologies to move data away from the desktop and into data centers, or into the “cloud.” The biggest disruptive trend over the past decade, cloud computing is now maturing, and it has the potential within the next five years to become an expected part in everyday computing, given that the largest pressing issues such cloud interoperability and security are addressed.&lt;/p&gt;

&lt;p&gt;As of 2017, the state of the practice in cloud computing is highly diverse. Out of 700 respondents to a recent survey by Cloudify (2017), 57 percent use cloud computing in various branches of the computer industry; 17 percent in telecommunication; 5 percent in government and academia; 7 percent in financial services and insurance; and 14 percent in other industries such as media, healthcare, retail, defense, and the Internet. The respondents came from organizations ranging in size from 1 employee to over 10,000. Their choices of cloud vendors ranged widely, with OpenStack, AWS, VMware, Azure, and Google Cloud others among the most common. Uses of cloud computing are various, some being infrastructure and platform, test and development environment, file storage, disaster recovery, backup, and big data analytics (Ferkoun, 2014).&lt;/p&gt;

&lt;p&gt;While highly diverse, the state of the practice is also rapidly evolving. The public cloud market is predicted to yield $236 billion in revenue by 2020 (Bartels et al., 2016), up from $58 billion in 2013 (Bartels et al., 2014). When cloud computing first emerged, uncertainties surrounding the new trend prevented some clients, particularly larger businesses, from adopting the cloud, but those concerns moderated as time passed, and the demographic of clients has shifted from mostly start-ups and mid-sized businesses to include an influx of larger businesses, the influx more rapid than predicted (Brinda &amp;amp; Heric, 2017). As Cappuccio (2015) reports, businesses have stopped asking whether they should use cloud computing. They are now asking &lt;em&gt;how&lt;/em&gt; they can leverage the technology.&lt;/p&gt;

&lt;p&gt;Cloud computing is evolving more rapidly than predicted, but the technology is still immature. According to Brinda and Heric (2017), businesses have not yet leveraged the cloud to drive innovation; 90 percent of current cloud use is from new clients adopting the cloud and older clients maintaining their clouds. For cloud computing to change how computing is done by becoming part of everyday computing, the technology needs to evolve more.&lt;/p&gt;

&lt;p&gt;One of the biggest issues affecting the future of cloud computing is cloud interoperability (Ardagna, 2015; Cretella &amp;amp; Di Martino, 2015; Gracia-Tinedo et al., 2017; Kostoska, Gusev, &amp;amp; Ristov, 2016; Opara-Martins, Sahandi, &amp;amp; Tian, 2016), which is the ability to easily move data from one cloud vendor to another. Since each vendor’s cloud environment has its own interface and tools, migrating data between vendors involves costs and complexities that may slow down a customer’s performance and innovation, or trap the customer with one vendor, a situation known as “vendor lock-in” (Opara-Martins et al., 2016). Customers want the freedom to move from vendor to vendor as their needs change, and that isn’t currently possible.&lt;/p&gt;

&lt;p&gt;A solution to the issue of cloud interoperability is to develop and implement open standards. There have been many efforts toward this. In one such effort, Gracia-Tinedo et al. (2017) proposed a protocol called &lt;em&gt;DataWings&lt;/em&gt; that standardizes storage APIs and user authentication management. In another effort, Cretella and DiMartino (2015) proposed a “mOSAIC” engine to standardize graphical representations of the user services that each vendor provides. Despite efforts such as these, no official open standards have been agreed upon yet, as there are too many pieces of the cloud to standardize, and cloud vendors are reluctant to cooperate with the efforts, instead preferring to seek profit from vendor lock-ins (Opara-Martins et al., 2016).&lt;/p&gt;

&lt;p&gt;Due to the absence of open standards, it is possible the next five years will see an increase in multi-cloud usage, an alternative solution. By deploying over multiple clouds, clients can avoid vendor lock-in (Ardagna, 2015). A recent survey by Cloudify (2017) reported that close to half of its 700 respondents are using at least two cloud vendors, with nine percent using as many as five vendors or more. This multi-cloud strategy seems like it will continue to rise in popularity. Cappuccio (2015) predicts that 70 percent of businesses will be using multiple clouds by 2019, up from less than 10 percent in 2015.&lt;/p&gt;

&lt;p&gt;In addition to cloud interoperability, cloud security is a big issue affecting the future of cloud computing (Rad, Diaby, &amp;amp; Rana, 2017; Ouedraogo, Mignon, Cholez, Furnell, &amp;amp; Dubois, 2015; Chhabra &amp;amp; Dixit, 2015). Entrusting centralized data centers with data normally stored on the desktop raised concerns that, with the maturation of cloud computing, have moderated, shifted, or created further concerns (Brinda &amp;amp; Heric, 2017; Smith, 2017). The top security threats currently are “data breaches; data loss; account hijacking; insecure APIs; denial of service; malicious insiders; abuse of cloud services; insufficient due diligence; shared technology issues; weak identity, and credential and access management; system and application vulnerabilities; and advanced persistent threats” (Top Threats Working Group, 2016). As evidenced by this list of threats, cloud security is a big—and broad—issue.&lt;/p&gt;

&lt;p&gt;Much of the state of the art research directly addresses these top threats. For example, LeJeune, Tunstall, Yang, and Alkadi (2016) propose two algorithms, MIST and Malachi, to strengthen security against threats of account hijacking, weak identity, and credential and access management. The algorithms do this task by helping to reduce security vulnerabilities caused by the users themselves, such as weak passwords or security questions. As another example, Ennajjar, Tabii, and Benkaddour (2017) propose a data processing model that reduces the threat of data breaches. Their model categorizes data before it gets encrypted, so that different algorithms can be used to encrypt the data from different categories, taking into consideration different levels of sensitivity.&lt;/p&gt;

&lt;p&gt;If the issues of cloud security and interoperability continue to be addressed as they have been in the state of the art research, it is likely that in the next five years the rapid growth of cloud computing can be sustained, allowing the technology to mature and settle into its place in everyday computing.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Ardagna, D. (2015). Cloud and multi-cloud computing: Current challenges and future applications. 7th International Workshop on Principles of Engineering Service-Oriented and Cloud Systems (2015 IEEE/ACM), 1-2. https://doi.org/10.1109/PESOS.2015.8&lt;/p&gt;

&lt;p&gt;Bartels, A., Bartoletti, D., Rymer, J. R., Mines, C., Cser, A., Hanson, M., . . . McPherson, I. (2016, September). The public cloud services market will grow rapidly to $236 billion in 2020: 2020 sizing forecast shows strong growth, but with signs of maturity on the horizon. Retrieved from Forrester website: https://www.forrester.com/report/The+Public+Cloud+Market+Is+Now+In+Hypergrowth/-/E-RES113365&lt;/p&gt;

&lt;p&gt;Bartels, A., Rymer, J. R., Staten, J., Kark, K., Clark, J., &amp;amp; Whittaker, D. (2014, April). The public cloud market is now in hypergrowth: Sizing the public cloud market, 2014 to 2020. Retrieved from Forrester website: https://www.forrester.com/report/The+Public+Cloud+Market+Is+Now+In+Hypergrowth/-/E-RES113365&lt;/p&gt;

&lt;p&gt;Brinda, M., &amp;amp; Heric, M. (2017, January 25). The changing faces of the cloud. Bain Brief. Retrieved from http://www.bain.com/publications/articles/the-changing-faces-of-the-cloud.aspx&lt;/p&gt;

&lt;p&gt;Cappuccio, D. J. (2015, June). The future of the data center in the cloud era. Retrieved from Gartner website: https://www.gartner.com/doc/3079122?ref=unauthreader&amp;amp;srcId=1-4730952011&lt;/p&gt;

&lt;p&gt;Chhabra, S., &amp;amp; Dixit, V. S. (2015). Cloud computing: State of the art and security issues. ACM SIGSOFT Software Engineering Notes, 40(2), 1-11. https://doi.org/10.1145/2735399.2735405&lt;/p&gt;

&lt;p&gt;Cretella, G., &amp;amp; Di Martino, B. (2015). A semantic engine for porting applications to the cloud and among clouds. Software: Practice and Experience, 45, 1619-1647. https://doi.org/10.1002/spe.2304&lt;/p&gt;

&lt;p&gt;Ennajjar, I., Tabii, Y., &amp;amp; Benkaddour, A. (2017). Securing data in cloud computing by classification. Proceedings of the 2nd International Conference on Big Data, Cloud and Applications (BDCA’17), (Article No.: 49). https://doi.org/10.1145/3090354.3090404&lt;/p&gt;

&lt;p&gt;Ferkoun, M. (2014, February 6). Top 7 most common uses of cloud computing [Blog post]. Retrieved from https://www.ibm.com/blogs/cloud-computing/2014/02/top-7-most-common-uses-of-cloud-computing/&lt;/p&gt;

&lt;p&gt;Gracia-Tinedo, R., Cotes, C., Zamora-Gomez, E., Ortiz, G., Moreno-Martinez, A., Sanchez-Artigas, M., . . . Illana, A. (2017). Giving wings to your data: A first experience of personal cloud interoperability. Future Generation Computer Systems, 78, 1055-1070. https://doi.org/10.1016/j.future.2017.01.027&lt;/p&gt;

&lt;p&gt;Kostoska, M., Gusev, M., &amp;amp; Ristov, S. (2016). An overview of cloud interoperability. Proceedings of the 2016 Federated Conference on Computer Science and Information Systems (FedCSIS), 8, 873-876. https://doi.org/10.15439/2016F463&lt;/p&gt;

&lt;p&gt;LeJeune, J., Tunstall, C., Yang, K.-P., &amp;amp; Alkadi, I. (2016). An algorithmic approach to improving cloud security: The MIST and Malachi algorithms. 2016 IEEE Aerospace Conference, 1-7. https://doi.org/10.1109/AERO.2016.7500522&lt;/p&gt;

&lt;p&gt;Opara-Martins, J., Sahandi, R., &amp;amp; Tian, F. (2016). Critical analysis of vendor lock-in and its impact on cloud computing migration: A business perspective. Journal of Cloud Computing: Advances, Systems and Applications, 5(4), 1-18. https://doi.org/10.1186/s13677-016-0054-z&lt;/p&gt;

&lt;p&gt;Ouedraogo, M., Mignon, S., Cholez, H., Furnell, S., &amp;amp; Dubois, E. (2015). Security transparency: The next frontier for security research in the cloud. Journal of Cloud Computing, 4(12), 1-14. https://doi.org/10.1186/s13677-015-0037-5&lt;/p&gt;

&lt;p&gt;Rad, B. B., Diaby, T., &amp;amp; Rana, M. E. (2017). Cloud computing adoption: A short review of issues and challenges. Proceedings of the 2017 International Conference on E-commerce, E-Business and E-Government (ICEEG 2017), 51-55. https://doi.org/10.1145/3108421.3108426&lt;/p&gt;

&lt;p&gt;Smith, D. M. (2017, January). Cloud computing primer for 2017. Retrieved from Gartner website: https://www.gartner.com/doc/3570517/cloud-computing-primer-&lt;/p&gt;

&lt;p&gt;Top Threats Working Group. (2016, February). The treacherous 12: Cloud computing top threats in 2016. Retrieved from Cloud Security Alliance website: https://downloads.cloudsecurityalliance.org/assets/research/top-threats/Treacherous-12_Cloud-Computing_Top-Threats.pdf&lt;/p&gt;

&lt;p&gt;2017 state of enterprise multi-cloud: Managing the fragmented cloud world. (2017). Retrieved from Cloudify website: http://wp.cloudify.co/wp-content/uploads/2017/09/2017-State-of-Enterprise-Multi-Cloud-Report.pdf&lt;/p&gt;

</description>
          <pubDate>2017-09-26T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/present-and-future-state-of-cloud-computing</link>
          <guid isPermaLink="true">http://localhost:4000/notes/present-and-future-state-of-cloud-computing</guid>
        </item>
      
    
      
        <item>
          <title>An exercise in writing dry code</title>
          <description>&lt;p&gt;In ISTE-200, I wrote a program, &lt;code class=&quot;highlighter-rouge&quot;&gt;OrderNumbers.java&lt;/code&gt;, that accepts three integers from the user as three separate variables and sorts and prints the numbers in ascending numerical order, using only if statements and no arrays.&lt;/p&gt;

&lt;p&gt;The final version of my code:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OrderNumbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Declare and initialize all variables&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// for sorting numbers&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// for keeping track of user input&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// If user has entered 3 valid numbers, break loop&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Prompt user to input a number&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter number: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// If input is invalid, notify user&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Invalid input.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Otherwise assign input to appropriate variable&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// eats line&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// Sort numbers in ascending order&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Print the ordered numbers&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ordered numbers are: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It took me a while to code the part that checks whether the user input is valid, and if it isn’t, to continue prompting the user for a valid input. The final version of my code makes use of the best approach I could come up with without using an array.&lt;/p&gt;

&lt;p&gt;This was my first approach:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Prompt user to input numbers while checking validity&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter number: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Invalid input&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// eats line&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter number: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Invalid input&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter number: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Invalid input&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A bit redundant, eh? To mop up this wet code, I added the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;pointer&lt;/code&gt; to keep track of user input for variable assignment, allowing me to reuse the same block of code to validate all user inputs.&lt;/p&gt;
</description>
          <pubDate>2017-09-15T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/exercise-in-writing-dry-code</link>
          <guid isPermaLink="true">http://localhost:4000/notes/exercise-in-writing-dry-code</guid>
        </item>
      
    
      
        <item>
          <title>Where to invoke a SwingWorker in the MVC pattern</title>
          <description>&lt;p&gt;In a previous &lt;a href=&quot;http://briennakh.github.io/notes/learning-mvc&quot;&gt;post&lt;/a&gt;, I explain what I learned about building a simple Swing GUI using the MVC design pattern. When I began working with SwingWorkers though, I found myself unsure of where to invoke them in the pattern. This post addresses that question.&lt;/p&gt;

&lt;p&gt;In my previous post, this paragraph is key:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Although the View and Model don’t send instructions, they can notify the Controller &amp;gt;in event-driven systems when information changes. The Controller listens for such &lt;br /&gt;
notifications and defines the actions that the View and Model will execute in 
response. It does this by defining and passing listeners to the View and Model, 
which should provide methods that take the listeners as parameters and attach them 
to the appropriate objects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The model manages fundamental behaviors and data of the application. It can respond to requests for information, respond to instructions to change the state of its information, and even to notify observers in event-driven systems when information changes.&lt;/p&gt;

&lt;p&gt;In addition to instructing the model to return data, the Controller can also listen to the Model. The Model can contain code that fires notifications into the netherspace about any state changes. The Controller listens for specific notifications, interprets them, reflects the interpretation to the View.&lt;/p&gt;

&lt;p&gt;https://stackoverflow.com/questions/45338333/why-is-my-download-progress-bar-firing-the-same-event-multiple-times/45339354#45339354&lt;/p&gt;

&lt;p&gt;Blog post about separating swing worker into logic, and letting a background task that needs to publish happen in another class
Note: Also note that in most of my more complex Swing GUI’s, I often do my file downloading in a different (model) object and create my SwingWorker in a different object still (control) from the GUI object (the view). It may seem more complicated to do it this way, but it’s a lot easier to debug, maintain and enhance my program when I do it this way, especially when I heavily use interfaces to allow me to test all program components in isolation.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;File downloading is Model&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SwingWorker is in Control (to delegate publish to another class, all your getData(…) method needs to do is to periodically update a class property and notify listeners. Makes it easy to decouple the logic from the presentation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;https://stackoverflow.com/questions/2908306/how-to-delegate-swingworkers-publish-to-other-methods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;https://kodejava.org/how-do-i-listen-for-beans-property-change-event/&lt;/p&gt;

&lt;p&gt;Figure out why so many calls to System print ln… in my progress bar?&lt;/p&gt;
</description>
          <pubDate>2017-07-25T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/swingworker-mvc-organization</link>
          <guid isPermaLink="true">http://localhost:4000/notes/swingworker-mvc-organization</guid>
        </item>
      
    
      
        <item>
          <title>Don't block the GUI: Dealing with long-running tasks using a SwingWorker</title>
          <description>&lt;p&gt;Swing is not thread-safe. Because of this, you can update the GUI from only the event dispatch thread, and not any other thread, otherwise unwanted behavior may result. If you can update the GUI from only the event dispatch thread, how do you handle long-running tasks that may lock up this thread, freezing the GUI?&lt;/p&gt;

&lt;p&gt;This post explains how, using a simple counter GUI for demonstration purposes.&lt;/p&gt;

&lt;h3 id=&quot;types-of-threads-in-swing&quot;&gt;Types of threads in Swing&lt;/h3&gt;

&lt;p&gt;There are three types of threads in Swing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;initial thread&lt;/strong&gt; — where the program starts.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;event dispatch thread&lt;/strong&gt; — where all the code that interacts with the GUI is executed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;worker thread (background thread)&lt;/strong&gt; — where long-running tasks are executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You don’t need to explicitly create these threads; they are provided by the runtime or the Swing framework. You just utilize these threads to create a responsive, maintainable Swing program.&lt;/p&gt;

&lt;h3 id=&quot;a-swing-program-runs-on-the-event-dispatch-thread&quot;&gt;A Swing program runs on the event dispatch thread&lt;/h3&gt;

&lt;p&gt;Like other standard Java programs, a Swing program starts on the initial thread. The initial thread could simply create the GUI itself, but this isn’t recommended. For a Swing program, the initial thread’s recommended job is to “create a Runnable object that initializes the GUI and schedule that object for execution on the event dispatch thread” &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/concurrency/initial.html&quot;&gt;(Oracle)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To do this job, invoke &lt;code class=&quot;highlighter-rouge&quot;&gt;SwingUtilities.invokeLater&lt;/code&gt;. Executing on the event dispatch thread, this method asynchronously invokes the Runnable object you pass to it, taking into consideration that the thread may be busy at the time.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.SwingUtilities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SwingUtilities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeLater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;CounterView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CounterView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dont-block-the-gui-by-putting-long-running-tasks-on-the-event-dispatch-thread&quot;&gt;Don’t block the GUI by putting long-running tasks on the event dispatch thread&lt;/h3&gt;

&lt;p&gt;“Once the GUI is created, the program is primarily driven by GUI events, each of which causes the execution of a short task on the event dispatch thread” &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/concurrency/initial.html&quot;&gt;(Oracle)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of the tasks that you perform on the event dispatch thread should be instantaneous. Long-running tasks should not happen on this thread.&lt;/p&gt;

&lt;p&gt;The following code builds the counter GUI, but the “Start counter” button action listener executes a long-running task &lt;em&gt;on&lt;/em&gt; the event dispatch thread.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.awt.BorderLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.JPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.JFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.JButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.JLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.SwingWorker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.SwingConstants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.awt.event.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CounterView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JFrame&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JPanel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JButton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JLabel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CounterView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;customizeFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;createMainPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;createCountText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;createButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addComponentsToFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVisible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;customizeFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDefaultCloseOperation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EXIT_ON_CLOSE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createMainPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gui&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BorderLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createCountText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setHorizontalAlignment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SwingConstants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CENTER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Start counter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 
             * This task will freeze the GUI because it is a long-running
             * task happening on the event dispatch thread
             */&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionPerformed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addComponentsToFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BorderLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CENTER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BorderLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/07-13-17/frozen_gui.gif&quot; alt=&quot;frozen gui&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As the GIF shows, the GUI has frozen. Because there is a long-running task happening on the event dispatch thread, I am unable to resize the window or do anything with the GUI until the task has completed.&lt;/p&gt;

&lt;h3 id=&quot;how-to-handle-long-running-tasks&quot;&gt;How to handle long-running tasks&lt;/h3&gt;

&lt;p&gt;To avoid blocking the GUI, move a long-running task to another thread, the worker thread.&lt;/p&gt;

&lt;p&gt;Since you can update the GUI from only the event dispatch thread, you need to faciliate communication between the worker thread and the event dispatch thread. The easiest way to do this in Swing is to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;javax.swing.SwingWorker&lt;/code&gt; class, which runs a task on a worker thread and manages the interthread communication.&lt;/p&gt;

&lt;p&gt;In the following code edit, the “Start counter” button action listener creates and executes an instance of &lt;code class=&quot;highlighter-rouge&quot;&gt;SwingWorker&lt;/code&gt; from the event dispatch thread. When the user presses the button, the worker object launches a worker thread and runs the task on it, leaving the event dispatch thread unblocked.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Start counter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/* 
         * This long-running task doesn't freeze the GUI because it is 
         * happening on a worker thread, not the event dispatch thread
         */&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionPerformed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Create the worker&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;SwingWorker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwingWorker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

                &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Start the worker&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/07-13-17/unfrozen_gui.gif&quot; alt=&quot;unfrozen gui&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As the GIF shows, the GUI does not freeze, because the long-running task has been moved to a worker thread.&lt;/p&gt;

&lt;p&gt;Note about &lt;code class=&quot;highlighter-rouge&quot;&gt;SwingWorker&lt;/code&gt;: Each long-running task gets its own &lt;code class=&quot;highlighter-rouge&quot;&gt;SwingWorker&lt;/code&gt; worker, and each worker can be used only once.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note about the GIFs: The GIFs don’t show the button becoming disabled after the click, because this edit occurred after the GIFs’ creation.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;troubleshooting&quot;&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;If you need to determine whether your code is running on the event dispatch thread, invoke &lt;code class=&quot;highlighter-rouge&quot;&gt;javax.swing.SwingUtilities.isEventDispatchThread&lt;/code&gt;.&lt;/p&gt;
</description>
          <pubDate>2017-07-13T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/swingworker</link>
          <guid isPermaLink="true">http://localhost:4000/notes/swingworker</guid>
        </item>
      
    
      
        <item>
          <title>Measuring execution time</title>
          <description>&lt;p&gt;Sometimes we want measure how long a method takes to execute. How do we do this?&lt;/p&gt;

&lt;p&gt;Looking at the &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.System&lt;/code&gt; class, we see two methods that return the time: &lt;code class=&quot;highlighter-rouge&quot;&gt;System.currentTimeMillis()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;System.nanotime()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The purpose of &lt;code class=&quot;highlighter-rouge&quot;&gt;currentTimeMillis&lt;/code&gt; is to “return the current time in milliseconds,” and the purpose of &lt;code class=&quot;highlighter-rouge&quot;&gt;nanoTime&lt;/code&gt; is to “return the current value of the running Java Virtual Machine’s high-resolution time source, in nanoseconds.” Since &lt;code class=&quot;highlighter-rouge&quot;&gt;currentTimeMillis&lt;/code&gt; depends on the system clock, it is safer to use the system-independent &lt;code class=&quot;highlighter-rouge&quot;&gt;nanoTime&lt;/code&gt; to measure execution time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code that measures execution time:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// prints something like 10000472572&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To convert the execution time to any format you want, a good library to use is &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.concurrent.TimeUnit&lt;/code&gt;. It isn’t a good idea to divide or multiply time to change units, because this is senselessly error-prone and harder to read. Always use a library.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code that converts execution time to minutes and seconds:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NANOSECONDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMinutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NANOSECONDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MINUTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d min, %d sec&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// prints 0 min, 10 sec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;The complete code:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.concurrent.TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExecutionTimeMeasurer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Measure execution time&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Convert execution time to minutes and seconds&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NANOSECONDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMinutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NANOSECONDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MINUTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d min, %d sec&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
          <pubDate>2017-07-02T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/calculating-elapsed-time</link>
          <guid isPermaLink="true">http://localhost:4000/notes/calculating-elapsed-time</guid>
        </item>
      
    
      
        <item>
          <title>Building a simple Swing GUI using the MVC design pattern</title>
          <description>&lt;p&gt;I’m learning how to build a simple Swing GUI in Java using the MVC design pattern.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: I’m unsure if MVC is the correct name for the design pattern. I see conflicting explanations. Some say it is MVC. Some say that it’s PAC, what inexperienced programmers accidentally ended up with when they tried to implement MVC. Some say that since a web application doesn’t map nicely to either MVC or PAC, it’s a sort of hybrid pattern. When I figure this out, I’ll edit the post.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-mvc&quot;&gt;What is MVC?&lt;/h3&gt;

&lt;p&gt;Model-View-Controller (MVC) is a pattern for organizing code in applications that implement user interfaces. MVC achieves its organization by separating the application code into three components: the Model, the View, and the Controller.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Components:&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model&lt;/strong&gt; — contains the data and the methods needed to manipulate the data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;View&lt;/strong&gt; — contains the interface that the outside world sees and interacts with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt; — coordinates interactions between the Model and the View.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Interactions between the components:&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/06-28-17/mvc.png&quot; alt=&quot;mvc diagram of interactions&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key to the MVC pattern is the &lt;em&gt;direction&lt;/em&gt; in which instructions flow. The View and the Model are both “dumb”; they don’t know about the existence of anything outside of themselves. Neither component ever sends instructions out. The Controller is the master; it is in command of everything. All instructions flow from it.&lt;/p&gt;

&lt;p&gt;Although the View and Model don’t send instructions, they can notify the Controller in event-driven systems when information changes. The Controller listens for such notifications and defines the actions that the View and Model will execute in response. It does this by defining and passing listeners to the View and Model, which should provide methods that take the listeners as parameters and attach them to the appropriate objects.&lt;/p&gt;

&lt;p&gt;This separateness makes for maintainable code, since the programmer can go in to change only one part, without breaking apart the entire program.&lt;/p&gt;

&lt;p&gt;In fact, the test of a true MVC design is whether the program is fully functional even without the View and Controller. Yes, the outside world probably will have trouble interacting with the program in that form, but as long as one knows the Model’s API, the program should hold and manipulate data as it would with a View and Controller.&lt;/p&gt;

&lt;h3 id=&quot;a-simple-swing-gui-that-uses-the-mvc-design-pattern&quot;&gt;A simple Swing GUI that uses the MVC design pattern&lt;/h3&gt;

&lt;p&gt;Following Derek Banas’ &lt;a href=&quot;https://www.youtube.com/watch?v=dTVVa2gfht8&quot;&gt;YouTube tutorial&lt;/a&gt;, I built a simple calculator with Swing and MVC that lets the user enter two numbers, press a button to add the numbers, and view the sum.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/06-28-17/derek banas mvc.png&quot; alt=&quot;Derek Banas' calculator&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The package structure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvc_tutorial
    |_ MVCCalculator.java   
    |_ CalculatorModel.java 
    |_ CalculatorView.java
    |_ CalculatorController.java  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CalculatorModel.java&lt;/code&gt; contains the model, &lt;code class=&quot;highlighter-rouge&quot;&gt;CalculatorView.java&lt;/code&gt; the view, and &lt;code class=&quot;highlighter-rouge&quot;&gt;CalculatorController.java&lt;/code&gt; the controller. &lt;code class=&quot;highlighter-rouge&quot;&gt;MVCCalculator.java&lt;/code&gt; launches the program.&lt;/p&gt;

&lt;p&gt;MVCCalculator.java:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mvc_tutorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * 
 * Runs the MVC. 
 *
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MVCCalculator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Create the View&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CalculatorView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculatorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Create the Model&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CalculatorModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculatorModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Create the Controller&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CalculatorController&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculatorController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Show the view on the screen&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVisible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CalculatorModel.java:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mvc_tutorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * 
 * Contains the data and the methods needed to manipulate the data.
 *
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalculatorModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The sum of the numbers entered in the view&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculationValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Perform a calculation&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addTwoNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calculationValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Provide access to data&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCalculation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculationValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CalculatorView.java:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mvc_tutorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.awt.event.ActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.swing.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * 
 * Contains the interface (GUI) that the outside world sees and interacts with.
 *
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalculatorView&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JFrame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JTextField&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JTextField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JLabel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;additionLabel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JTextField&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JTextField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JButton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculateButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Calculate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JTextField&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calcSolution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JTextField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Set up the view and add the components&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CalculatorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;JPanel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDefaultCloseOperation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EXIT_ON_CLOSE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;additionLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calculateButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calcSolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calcPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getFirstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSecondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCalcSolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calcSolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Set solution&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setCalcSolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calcSolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// If the calculateButton is clicked, execute listener's actionPerformed method&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addCalculateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calculateButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Open a popup that contains the error message passed&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;displayErrorMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;JOptionPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showMessageDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errorMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CalculatorController.java:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mvc_tutorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.awt.event.ActionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.awt.event.ActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * 
 * Coordinates interactions between the Model and the View.
 *
 */&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalculatorController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculatorView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculatorModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CalculatorController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CalculatorView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculatorModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;theModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// Tell the view that whenever the calculate button is clicked,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// to execute the actionPerformed method in the CalculateListener inner class&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addCalculateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// inner class&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalculateListener&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionPerformed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;// Surround interactions with the view with &lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// a try block in case numbers weren't properly entered&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFirstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSecondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;theModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addTwoNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCalcSolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCalculation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NumberFormatException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;theView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;displayErrorMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;You need to enter 2 integers&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the user clicks the “Calculate” button, the View notifies the Controller of this user action via the &lt;code class=&quot;highlighter-rouge&quot;&gt;CalculateListener&lt;/code&gt; listener. The Controller defined this listener and passed it to the View via the &lt;code class=&quot;highlighter-rouge&quot;&gt;addCalculateListener&lt;/code&gt; method, which attached the listener to the button. In the listener’s &lt;code class=&quot;highlighter-rouge&quot;&gt;actionPerformed&lt;/code&gt; method, the Controller retrieves the number that the user entered, instructs the Model to add them, and retrieves the sum, telling the View to display it.&lt;/p&gt;
</description>
          <pubDate>2017-06-28T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/learning-mvc</link>
          <guid isPermaLink="true">http://localhost:4000/notes/learning-mvc</guid>
        </item>
      
    
      
        <item>
          <title>ISTE-608 Study Guide, Part 2</title>
          <description>&lt;p&gt;&lt;em&gt;This post is the second in a series that serves as a study guide for the ISTE-608 waiver exam at the Rochester Institute of Technology.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;written-exam-cont&quot;&gt;WRITTEN EXAM, CONT.&lt;/h3&gt;

&lt;h3 id=&quot;state-what-data-modeling-is-and-why-it-is-important&quot;&gt;State what data modeling is and why it is important.&lt;/h3&gt;

&lt;p&gt;Data modeling describes the logical structure of a database. It is an important step in database design and implementation, since the data model is used as the basis for the creation of the physical structure.&lt;/p&gt;

&lt;p&gt;The Entity-Relationship Model (ERM) is the widely accepted standard for data modeling. Normally represented in an Entity-Relationship Diagram (ERD), the ERM uses graphical representations to model the database’s main components: entities, attributes, and relationships.&lt;/p&gt;

&lt;h3 id=&quot;define-and-contrast-the-terms-relation-attribute-and-tuples-as-they-pertain-to-the-relational-model&quot;&gt;&lt;strong&gt;Define and contrast the terms Relation, Attribute, and Tuples, as they pertain to the relational model.&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Relation — (table) a set of tuples that have the same attributes, represents an entity class.&lt;/p&gt;

&lt;p&gt;Attribute — (column) a name paired with a data type (or domain), represents a property of the entity.&lt;/p&gt;

&lt;p&gt;Tuple — (row) a set of attribute values, represents an entity instance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/06-04-17/relational database terms.png&quot; alt=&quot;relational model terms&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;describe-and-identify-the-difference-between-an-entity-class-and-an-entity-instance&quot;&gt;Describe and identify the difference between an Entity Class and an Entity Instance.&lt;/h3&gt;

&lt;p&gt;An entity class, is a group of entities of the same type, whereas an entity instance is a particular entity.&lt;/p&gt;

&lt;p&gt;In the relational database, an entity class is mapped to a table, and an entity instance corresponds to a tuple.&lt;/p&gt;

&lt;h3 id=&quot;recognize-the-following-when-given-an-er-diagram-and-state-what-the-meaning-is-entity-attribute-simple-vs-composite-single-valued-vs-multi-valued-stored-vs-derived-and-identifier&quot;&gt;Recognize the following, when given an ER diagram, and state what the meaning is: Entity, Attribute (simple vs composite; single-valued vs multi-valued, stored vs derived, and identifier).&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/06-04-17/attributes.png&quot; alt=&quot;types of attributes&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entity — Real-world object or concept. Term refers to the entity class, not the entity instance.&lt;/p&gt;

&lt;p&gt;Attribute — Descriptive property of the entity.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Types of attributes:&lt;/u&gt;&lt;br /&gt;
Simple attribute — Atomic.&lt;/p&gt;

&lt;p&gt;Composite attribute — Contains sub-attributes.&lt;/p&gt;

&lt;p&gt;Single-valued attribute — Contains a single value.&lt;/p&gt;

&lt;p&gt;Multi-valued attribute — Contains multiple values.&lt;/p&gt;

&lt;p&gt;Stored attribute — Value is physically stored in the database.&lt;/p&gt;

&lt;p&gt;Derived attribute — Value is derived from other attributes.&lt;/p&gt;

&lt;p&gt;Identifier attribute — Uniquely identifies a particular entity instance.&lt;/p&gt;

&lt;h3 id=&quot;compare-and-contrast-the-chen-notation-and-the-crows-foot-notation&quot;&gt;Compare and contrast the Chen notation and the Crow’s foot notation.&lt;/h3&gt;

&lt;p&gt;The Chen notation favors conceptual modeling, whereas the Crow’s Foot notation favors a more implementation-oriented approach.&lt;/p&gt;

&lt;h3 id=&quot;describe-what-an-identifier-is-and-its-usage&quot;&gt;Describe what an identifier is and its usage.&lt;/h3&gt;

&lt;p&gt;An identifier, or primary key, is an attribute(s) whose value is unique for each entity instance and thus identifies that particular entity instance.&lt;/p&gt;

&lt;h3 id=&quot;appropriately-represent-simple-identifiers-and-composite-identifiers-using-either-chen-or-crows-feet-notation&quot;&gt;Appropriately represent simple identifiers and composite identifiers, using either Chen or Crow’s feet notation.&lt;/h3&gt;

&lt;h3 id=&quot;describe-a-composite-identifier&quot;&gt;Describe a composite identifier.&lt;/h3&gt;

&lt;p&gt;A simple identifier is composed of a single attribute, whereas a composite identifier, or composite key, is a set of attributes.&lt;/p&gt;

&lt;h3 id=&quot;list-the-steps-involved-in-creating-a-database&quot;&gt;List the steps involved in creating a database.&lt;/h3&gt;

&lt;p&gt;Steps differ between resources. Below are the &lt;a href=&quot;https://support.office.com/en-US/article/Database-design-basics-EB2159CF-1E30-401A-8084-BD4F9C9CA1F5&quot;&gt;guidelines&lt;/a&gt; provided by Microsoft Access:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Determine the purpose of the database.&lt;/li&gt;
  &lt;li&gt;Find and organize the information required.&lt;/li&gt;
  &lt;li&gt;Divide the information into major entities, or tables.&lt;/li&gt;
  &lt;li&gt;Turn information items into columns.&lt;/li&gt;
  &lt;li&gt;Specify primary keys.&lt;/li&gt;
  &lt;li&gt;Set up the table relationships.&lt;/li&gt;
  &lt;li&gt;Refine the design.&lt;/li&gt;
  &lt;li&gt;Apply the normalization rules.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;NOTE: I will update this list when I find/understand a better one.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;transpose-an-er-diagram-with-chen-or-crows-feet-notation-of-a-single-entity-into-a-relation&quot;&gt;Transpose an ER diagram, with Chen or Crow’s Feet notation, of a single entity into a relation.&lt;/h3&gt;

&lt;p&gt;&lt;u&gt;Basic rules:&lt;/u&gt;&lt;br /&gt;
Each entity always corresponds to a relation.&lt;/p&gt;

&lt;p&gt;Simple attributes correspond to columns, with the identifier attribute(s) underlined.&lt;/p&gt;

&lt;p&gt;Composite attributes are merged into the same relation the same way as simple attributes.&lt;/p&gt;

&lt;p&gt;Multi-valued attributes get their own relations. Within each new relation, add the identifier attribute of the parent entity as a foreign key.&lt;/p&gt;

&lt;p&gt;Derived attributes can be ignored, since they are not physically stored in the database.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;ER diagram, with Chen notation:&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/06-04-17/ER-diagram.png&quot; alt=&quot;types of attributes&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Relations:&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Person(&lt;u&gt;SSN&lt;/u&gt;, FirstName, LastName, Address, Birthdate)&lt;/p&gt;

&lt;p&gt;Hobby(&lt;u&gt;SSN&lt;/u&gt;, &lt;u&gt;Hobby&lt;/u&gt;)&lt;/p&gt;

</description>
          <pubDate>2017-06-04T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/ISTE-208-study-guide-part-2</link>
          <guid isPermaLink="true">http://localhost:4000/notes/ISTE-208-study-guide-part-2</guid>
        </item>
      
    
      
        <item>
          <title>How to compile and execute a package from the command line</title>
          <description>&lt;p&gt;Up to this point, my experience with Java and the command line has covered only classes in unnamed, or default, packages. Now I’m coding a named package to process DNA sequence alignments, and it took me a while to grasp how to properly compile and run my code from the command line.&lt;/p&gt;

&lt;p&gt;I named my package &lt;code class=&quot;highlighter-rouge&quot;&gt;alignmentparser&lt;/code&gt; and set its directory structure as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root]
    alignmentparser
        |_____ Subject.java
        |_____ TestRunner.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At the top of each Java file, I added the package statement &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alignmentparser&lt;/span&gt;&lt;/code&gt;, the package name corresponding to the directory structure relative to the file.&lt;/p&gt;

&lt;p&gt;My first attempt at compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;TestRunner&lt;/code&gt;, which includes a dependency on &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject&lt;/code&gt;, resulted in errors indicating that the compiler was not finding &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Briennas-MacBook-2:alignmentparser Brienna$ javac TestRunner.java
TestRunner.java:9: error: cannot find symbol
  private Subject subj = new Subject(&quot;NM_080704&quot;, 1710, 2495);
          ^
  symbol:   class Subject
  location: class TestRunner
TestRunner.java:9: error: cannot find symbol
  private Subject subj = new Subject(&quot;NM_080704&quot;, 1710, 2495);
                             ^
  symbol:   class Subject
  location: class TestRunner
2 errors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After digging through online resources and enlisting the help of a friend (who asked me why in the world I wasn’t using an IDE like any sane person would), I chanced upon something that worked — going up one level in my working directory and compiling from there instead.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Briennas-MacBook-2:GitHub repositories Brienna$ javac alignmentparser/TestRunner.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reason why I messed up my first attempt at compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;TestRunner&lt;/code&gt; was because of something called the class path. The class path is the location where the compiler begins its search. It defaults to the current working directory. So when I compiled &lt;code class=&quot;highlighter-rouge&quot;&gt;TestRunner&lt;/code&gt; while in the &lt;code class=&quot;highlighter-rouge&quot;&gt;alignmentparser&lt;/code&gt; directory, the class path defaulted to &lt;code class=&quot;highlighter-rouge&quot;&gt;[root]/alignmentparser&lt;/code&gt;. Then when the compiler encountered the reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject&lt;/code&gt;, it began its search for that class by appending &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject&lt;/code&gt;’s package declaration to the default class path, making the class path now &lt;code class=&quot;highlighter-rouge&quot;&gt;[root]/alignmentparser/alignmentparser&lt;/code&gt;. This path does not exist, hence the compilation errors.&lt;/p&gt;

&lt;p&gt;Going up a directory worked, because there, the class path defaults to &lt;code class=&quot;highlighter-rouge&quot;&gt;[root]&lt;/code&gt;. Then when I compiled &lt;code class=&quot;highlighter-rouge&quot;&gt;TestRunner&lt;/code&gt; and the compiler encountered the reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject&lt;/code&gt;, it appended &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject&lt;/code&gt;’s package declaration to the default class path, making the class path now &lt;code class=&quot;highlighter-rouge&quot;&gt;[root]/alignmentparser&lt;/code&gt;. This path exists, so compilation succeeds.&lt;/p&gt;

&lt;h3 id=&quot;to-compile-a-file-within-a-named-package&quot;&gt;To compile a file within a named package:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Compile from outside the package itself, due to the package statement getting appended to the default class path.&lt;/li&gt;
  &lt;li&gt;Compile from anywhere but set the class path explicitly to the root folder, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Briennas-MacBook-2:alignmentparser Brienna$ javac -cp .. TestRunner.java&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, the compilation of multiple files can be specified in just one command: &lt;code class=&quot;highlighter-rouge&quot;&gt;javac FileName1.java FileName2.java&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;javac *.java&lt;/code&gt;. When you compile one file, all of its dependencies will compile too.&lt;/p&gt;

&lt;p&gt;To run a compiled class, follow the same rules with compiling, but use a period instead of a slash to represent directory levels, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;alignmentparser.TestRunner&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;alignmentparser/TestRunner&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;helpful-resources&quot;&gt;Helpful resources:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;http://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html&lt;/li&gt;
  &lt;li&gt;http://www.kevinboone.net/classpath.html&lt;/li&gt;
&lt;/ul&gt;

</description>
          <pubDate>2017-02-09T00:00:00-05:00</pubDate>
          <link>http://localhost:4000/notes/Compiling-and-running</link>
          <guid isPermaLink="true">http://localhost:4000/notes/Compiling-and-running</guid>
        </item>
      
    
      
        <item>
          <title>Beware of slow console logs</title>
          <description>&lt;p&gt;JavaScript being silly? &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But console logging is not perfect, which I realized the other day when helping &lt;a href=&quot;https://github.com/Gregb1609&quot;&gt;Gregb1609&lt;/a&gt; on FreeCodeCamp’s Gitter chat. He was working on an intermediate algorithm scripting problem called &lt;a href=&quot;https://www.freecodecamp.com/challenges/sum-all-primes&quot;&gt;Sum All Primes&lt;/a&gt;, where you’re supposed to sum all the prime numbers up to and including the provided number. His solution worked with lower numbers, like 10, but lagged badly with higher numbers, like 977.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sumPrimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;multiple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modulo i&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; j&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;multiple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;not prime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;multiple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;multiple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;end&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sumPrimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// works fine&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sumPrimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;977&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// lags badly&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I took a look at his code, it looked fine. No obvious bugs. So using a sort of elimination method, I gradually reformatted my own solution to the problem, which worked, to match his. In doing so, I realized that the only true difference between his and my code was that he console logged while I didn’t.&lt;/p&gt;

&lt;p&gt;I commented out his &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt;s and voilà! His code now worked with higher numbers.&lt;/p&gt;

&lt;p&gt;Gregb1609’s case was extreme, but it showed me that console logging really slows down a program’s execution. To prevent giving up performance for nothing, I’ll have to remember to comment out any console log statements before I push code to production.&lt;/p&gt;
</description>
          <pubDate>2016-09-28T00:00:00-04:00</pubDate>
          <link>http://localhost:4000/notes/beware-of-slow-console-logs</link>
          <guid isPermaLink="true">http://localhost:4000/notes/beware-of-slow-console-logs</guid>
        </item>
      
    
  </channel>
</rss>
